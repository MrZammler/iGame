##########################################################################
# Makefile for iGame on Docker VBCC images.
#-------------------------------------------------------------------------
# To compile an iGame flat executable  using this makefile, run:
#  make -f Makefile.docker CPU=030
#  CPU options are 000,030,040,060,MOS,OS4
#-------------------------------------------------------------------------
##########################################################################

##########################################################################
# Default: Build iGame with standard optimizations and 000 support
##########################################################################
all: iGame

##########################################################################
# Set up version and date properties
##########################################################################

DATEISO = $(shell date --iso=date)
DATESTR = $(shell date "+%Y%m%d")

# DRONE_TAG is set by Drone CI/CD
# Parse the repo tag to different defines, that will be used while
# compiling iGame
#
# The tags should be like v(MAJOR).(MINOR).(PATCH)
# in example v2.2.0
#
ifneq ($(origin DRONE_TAG),undefined)
	MAJOR = $(patsubst v%,%,$(firstword $(subst ., ,$(DRONE_TAG))))
	MINOR = $(word 2, $(subst ., ,$(DRONE_TAG)))
	PATCH = $(word 3, $(subst ., ,$(DRONE_TAG)))

	VERS_FLAGS = -DMAJOR_VERS=$(MAJOR) -DMINOR_VERS=$(MINOR) \
		-DPATCH_VERS=$(PATCH) -DRELEASE_DATE=$(DATEISO)
else
	VERS_FLAGS = -DRELEASE_DATE=$(DATEISO)
endif

##########################################################################
# Compiler settings
##########################################################################
CC			= vc
LINK		= vc
CC_PPC		= vc
LINK_PPC	= vc

CPU ?= 000

##########################################################################
# INCLUDES settings
##########################################################################

ifneq (,$(filter 000 030 040 060,$(CPU)))
INCLUDES += -I$(NDK32_INC) -I$(MUI50_INC)
endif
ifneq (,$(filter OS4,$(CPU)))
INCLUDES += -I$(AOS4_SDK_INC) -I$(MUI50_INC) \
	-I$(AOS4_SDK_INC)/../../local/common/include
endif
ifneq (,$(filter MOS,$(CPU)))
INCLUDES += -I$(NDK_INC) -I$(MUI50_INC)
endif

##########################################################################
# CFLAGS settings
##########################################################################

CFLAGS = -c -dontwarn=-1 -O2 -c99 $(VERS_FLAGS)

ifneq (,$(filter 000 030 040 060,$(CPU)))
CFLAGS += +aos68k -cpu=68$(CPU) -DCPU_VERS=68$(CPU)
endif
ifneq (,$(filter OS4,$(CPU)))
CFLAGS += +aosppc -D__USE_INLINE__ -DCPU_VERS=AmigaOS4
endif
ifneq (,$(filter MOS,$(CPU)))
CFLAGS += +morphos -DCPU_VERS=MorphOS -D__morphos__
endif

ifeq ($(DEBUG), 1)
CFLAGS += -g -hunkdebug
endif

##########################################################################
# Linker settings
##########################################################################
LIBFLAGS = -lamiga

ifeq ($(DEBUG), 1)
LIBFLAGS += -g -Bamigahunk
endif

ifneq (,$(filter 000 030 040 060,$(CPU)))
LIBFLAGS += +aos68k -o
endif
ifneq (,$(filter OS4,$(CPU)))
LIBFLAGS += +aosppc -o
endif
ifneq (,$(filter MOS,$(CPU)))
LIBFLAGS += +morphos -o
endif


##########################################################################
# Object files which are part of iGame
##########################################################################

igame_OBJS	= src/funcs_$(CPU).o src/iGameGUI_$(CPU).o \
	src/iGameMain_$(CPU).o src/strfuncs_$(CPU).o src/fsfuncs_$(CPU).o \
	src/slavesList_$(CPU).o src/genresList_$(CPU).o \
	src/chipsetList_$(CPU).o src/WinInfo_$(CPU).o src/WinProps_$(CPU).o

##########################################################################
# Rule for building
##########################################################################

iGame: $(igame_OBJS)
	@echo "\nLinking iGame.$(CPU)\n"
	@$(LINK) $(igame_OBJS) $(LIBFLAGS) $@.$(CPU)

##########################################################################
# catalog files
##########################################################################

include make_includes/catalogs.inc

catalogs/%/iGame.catalog: catalogs/po/%.po catalogs/iGame.cd
	flexcat POFILE $< CATALOG $@ FILL QUIET || exit 0

##########################################################################
# build rules
##########################################################################

%_$(CPU).o: %.c
	@echo "\nCompiling $<"
	@$(CC) -c $< -o $*_$(CPU).o $(CFLAGS) $(INCLUDES)

src/funcs_$(CPU).o: src/funcs.c src/iGame_strings.h src/strfuncs.h \
	src/fsfuncs.h src/iGameExtern.h src/slavesList.h src/genresList.h \
	src/chipsetList.h

src/iGameGUI_$(CPU).o: src/iGameGUI.c src/iGameGUI.h src/iGame_strings.h \
	src/fsfuncs.h src/iGameExtern.h src/version.h src/WinInfo.h src/WinProps.h

src/iGameMain_$(CPU).o: src/iGameMain.c src/iGameExtern.h

src/strfuncs_$(CPU).o: src/strfuncs.c src/iGameExtern.h src/strfuncs.h \
	src/iGame_strings.h

src/fsfuncs_$(CPU).o: src/fsfuncs.c src/fsfuncs.h src/funcs.h \
	src/iGameExtern.h src/slavesList.h src/genresList.h \
	src/chipsetList.h src/iGame_strings.h

src/slavesList_$(CPU).o: src/slavesList.c src/slavesList.h

src/genresList_$(CPU).o: src/genresList.c src/genresList.h src/strfuncs.h

src/chipsetList_$(CPU).o: src/chipsetList.c src/chipsetList.h src/strfuncs.h

src/WinInfo_$(CPU).o: src/WinInfo.c src/WinInfo.h src/iGameExtern.h \
	src/iGameGUI.h src/iGame_strings.h src/funcs.h

src/WinProps_$(CPU).o: src/WinProps.c src/WinProps.h src/iGameExtern.h \
	src/iGameGUI.h src/iGame_strings.h src/funcs.h src/fsfuncs.h

##########################################################################
# generic rules
##########################################################################

clean:
	rm iGame iGame.* $(igame_OBJS) $(catalog_files)

release: $(catalog_files)
ifneq ($(origin DRONE_TAG),undefined)
	sed -i "s/VERSION_TAG/$(DRONE_TAG)/" ./required_files/iGame.guide
	sed -i "s/RELEASE_DATE/$(shell date "+%d.%m.%Y")/" ./required_files/iGame.guide
endif
	cp -r required_files iGame-$(DRONE_TAG)
	cp iGame-$(DRONE_TAG)/igame_drawer_3.0.info iGame-$(DRONE_TAG).info
	mv iGame-$(DRONE_TAG)/igame_drawer_3.0.info iGame-$(DRONE_TAG)/extras/icons
	mv iGame-$(DRONE_TAG)/igame_drawer.info iGame-$(DRONE_TAG)/extras/icons
	mkdir iGame-$(DRONE_TAG)/catalogs
	cp catalogs/iGame.cd iGame-$(DRONE_TAG)/catalogs/
	cd iGame-$(DRONE_TAG) && mkdir $(catalog_dirs)
	for c in $(catalog_files); do cp $$c iGame-$(DRONE_TAG)/$$(dirname $$c)/; done
ifneq ($(origin DRONE_TAG),undefined)
	sed -i "s/VERSION_TAG/$(DRONE_TAG)/" ./CHANGELOG.md
	sed -i "s/RELEASE_DATE/$(shell date "+%Y-%m-%d")/" ./CHANGELOG.md
endif
	cp CHANGELOG.md iGame-$(DRONE_TAG)/
	if [ -f "iGame.000" ]; then cp iGame.000 iGame-$(DRONE_TAG)/iGame; fi
	if [ -f "iGame.030" ]; then cp iGame.030 iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.040" ]; then cp iGame.040 iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.060" ]; then cp iGame.060 iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.MOS" ]; then cp iGame.MOS iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.OS4" ]; then cp iGame.OS4 iGame-$(DRONE_TAG)/; fi
	lha -aq2o6 iGame-$(DRONE_TAG)-$(DATESTR).lha iGame-$(DRONE_TAG)/ iGame-$(DRONE_TAG).info

clean-release:
	rm -rf iGame-$(DRONE_TAG)
	rm iGame-$(DRONE_TAG)-$(DATESTR).lha
	rm iGame-$(DRONE_TAG).info
