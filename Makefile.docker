##########################################################################
# Makefile for iGame on Docker VBCC images.
#-------------------------------------------------------------------------
# To compile an iGame flat executable  using this makefile, run:
#  make -f Makefile.docker
#-------------------------------------------------------------------------
##########################################################################

##########################################################################
# Default: Build iGame with standard optimizations and 000 support
##########################################################################
all: iGame

##########################################################################
# Set up version and date properties
##########################################################################

DATEISO = $(shell date --iso=date)
DATESTR = $(shell date "+%Y%m%d")

# DRONE_TAG is set by Drone CI/CD
# Parse the repo tag to different defines, that will be used while
# compiling iGame
#
# The tags should be like v(MAJOR).(MINOR) or v(MAJOR).(MINOR)b(BETA)
# in example v2.1 or v2.0b5
#
ifneq ($(origin DRONE_TAG),undefined)
	MAJOR = $(patsubst v%,%,$(firstword $(subst ., ,$(DRONE_TAG))))

	ifeq ($(findstring b,$(DRONE_TAG)), b)
		MINOR = $(lastword $(subst ., , $(firstword $(subst b, ,$(DRONE_TAG)))))
		BETA = $(lastword $(subst b, ,$(DRONE_TAG)))

		VERS_FLAGS = -DMAJOR_VERS=$(MAJOR) -DMINOR_VERS=$(MINOR) -DBETA_VERS=$(BETA) -DRELEASE_DATE=$(DATEISO)
	else
		MINOR = $(lastword $(subst ., ,$(DRONE_TAG)))

		VERS_FLAGS = -DMAJOR_VERS=$(MAJOR) -DMINOR_VERS=$(MINOR) -DRELEASE_DATE=$(DATEISO)
	endif
else
	VERS_FLAGS = -DRELEASE_DATE=$(DATEISO)
endif

##########################################################################
# Compiler settings
##########################################################################
CC			= vc
LINK		= vc
CC_PPC		= vc
LINK_PPC	= vc

INCLUDES	= -I$(NDK_INC) -I$(MUI38_INC)
INCLUDES_OS4= -I$(AOS4_SDK_INC) -I$(MUI50_INC)
INCLUDES_MOS= -I$(NDK_INC) -I$(MUI38_INC)

CFLAGS		= -c +aos68k -dontwarn=-1 -O2 -c99 -DCPU_VERS=68000 $(VERS_FLAGS)
CFLAGS_030	= -c +aos68k -cpu=68030 -dontwarn=-1 -O2 -c99 -DCPU_VERS=68030 $(VERS_FLAGS)
CFLAGS_040	= -c +aos68k -cpu=68040 -dontwarn=-1 -O2 -c99 -DCPU_VERS=68040 $(VERS_FLAGS)
CFLAGS_060	= -c +aos68k -cpu=68060 -dontwarn=-1 -O2 -c99 -DCPU_VERS=68060 $(VERS_FLAGS)
CFLAGS_MOS	= -c +morphos -dontwarn=-1 -O2 -DCPU_VERS=MorphOS $(VERS_FLAGS)
CFLAGS_OS4	= -c +aosppc -dontwarn=-1 -O2 -D__USE_INLINE__ -DCPU_VERS=AmigaOS4 $(VERS_FLAGS)

##########################################################################
# Builder settings
##########################################################################
#MKLIB			= join
LIBFLAGS		= +aos68k -lamiga -o
LIBFLAGS_MOS	= +morphos -lamiga -o
LIBFLAGS_OS4	= +aosppc -lamiga -o

##########################################################################
# Object files which are part of iGame
##########################################################################

include make_includes/obj_files.inc

##########################################################################
# Rule for building
##########################################################################

include make_includes/rules.inc

##########################################################################
# catalog files
##########################################################################
src/iGame_strings.h: catalogs/iGame.cd catalogs/CatComp_h.sd
	cd catalogs && flexcat iGame.cd ../src/iGame_strings.h=CatComp_h.sd

catalogs/%/iGame.catalog: catalogs/%/iGame.ct catalogs/iGame.cd
	flexcat catalogs/iGame.cd $< CATALOG $@ FILL QUIET || exit 0

catalog_files := $(patsubst %/iGame.ct,%/iGame.catalog,$(wildcard catalogs/*/iGame.ct))
catalog_dirs := $(dir $(catalog_files))

catalogs: $(catalog_files)

##########################################################################
# object files (generic 000)
##########################################################################

include make_includes/obj_000.inc

##########################################################################
# object files (030)
##########################################################################

include make_includes/obj_030.inc

##########################################################################
# object files (040)
##########################################################################

include make_includes/obj_040.inc

##########################################################################
# object files (060)
##########################################################################

include make_includes/obj_060.inc

##########################################################################
# object files (MOS)
##########################################################################

include make_includes/obj_mos.inc

##########################################################################
# object files (AOS4)
##########################################################################

include make_includes/obj_os4.inc

##########################################################################
# generic build options
##########################################################################

clean:
	rm iGame iGame.* src/funcs*.o src/iGameGUI*.o src/iGameMain*.o src/strfuncs*.o src/iGame_cat*.o $(catalog_files)

release: $(catalog_files)
	cp required_files iGame-$(DRONE_TAG) -r
	cp alt_icons iGame-$(DRONE_TAG)/icons -r
	cp iGame-$(DRONE_TAG)/igame_drawer_3.0.info iGame-$(DRONE_TAG).info
	mv iGame-$(DRONE_TAG)/igame_drawer_3.0.info iGame-$(DRONE_TAG)/icons
	mv iGame-$(DRONE_TAG)/igame_drawer.info iGame-$(DRONE_TAG)/icons
	mkdir iGame-$(DRONE_TAG)/catalogs
	cp catalogs/iGame.cd iGame-$(DRONE_TAG)/catalogs/
	cd iGame-$(DRONE_TAG) && mkdir $(catalog_dirs)
	for c in $(catalog_files); do cp $$c iGame-$(DRONE_TAG)/$$(dirname $$c)/; done
	cp CHANGELOG.md iGame-$(DRONE_TAG)/
	if [ -f "iGame" ]; then cp iGame iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.030" ]; then cp iGame.030 iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.040" ]; then cp iGame.040 iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.060" ]; then cp iGame.060 iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.MOS" ]; then cp iGame.MOS iGame-$(DRONE_TAG)/; fi
	if [ -f "iGame.OS4" ]; then cp iGame.OS4 iGame-$(DRONE_TAG)/; fi
	lha -aq2o6 iGame-$(DRONE_TAG)-$(DATESTR).lha iGame-$(DRONE_TAG)/ iGame-$(DRONE_TAG).info

clean-release:
	rm -rf iGame-$(DRONE_TAG)
	rm iGame-$(DRONE_TAG)-$(DATESTR).lha
	rm iGame-$(DRONE_TAG).info
