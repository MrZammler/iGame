{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build for 68000",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                        "-f",
                        "Makefile.docker",
                        "CPU=000"
                ]
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(warning|error) ([0-9]*) in line ([0-9]*) of \"(.*)\": (.*)$",
                    "severity": 1,
                    "line": 3,
                    "file": 4,
                    "message": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build for 68030",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                        "-f",
                        "Makefile.docker",
                        "CPU=030"
                ]
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(warning|error) ([0-9]*) in line ([0-9]*) of \"(.*)\": (.*)$",
                    "severity": 1,
                    "line": 3,
                    "file": 4,
                    "message": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build for 68040",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                        "-f",
                        "Makefile.docker",
                        "CPU=040"
                ]
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(warning|error) ([0-9]*) in line ([0-9]*) of \"(.*)\": (.*)$",
                    "severity": 1,
                    "line": 3,
                    "file": 4,
                    "message": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build for 68060",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                        "-f",
                        "Makefile.docker",
                        "CPU=060"
                ]
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(warning|error) ([0-9]*) in line ([0-9]*) of \"(.*)\": (.*)$",
                    "severity": 1,
                    "line": 3,
                    "file": 4,
                    "message": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build MorphOS",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                        "-f",
                        "Makefile.docker",
                        "CPU=MOS"
                ]
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(warning|error) ([0-9]*) in line ([0-9]*) of \"(.*)\": (.*)$",
                    "severity": 1,
                    "line": 3,
                    "file": 4,
                    "message": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build AmigaOS4",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                    "-f",
                    "Makefile.docker",
                    "CPU=OS4"
                ]
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(warning|error) ([0-9]*) in line ([0-9]*) of \"(.*)\": (.*)$",
                    "severity": 1,
                    "line": 3,
                    "file": 4,
                    "message": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Create release",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                    "-f",
                    "Makefile.docker",
                    "release"
                ]
            }
        },
        {
            "label": "Clean release files",
            "type": "shell",
            "linux": {
                "command": "make",
                "args": [
                    "-f",
                    "Makefile.docker",
                    "clean-release"
                ]
            }
        },
        {
            "label": "Clean",
            "type": "shell",
            "windows": {
                "command": "rm",
                "args": [
                    "-Path",
                    "./iGame,",
                    "./iGame.*,",
                    "./src/*.o"
                ]
            },
            "osx": {
                "command": "rm",
                "args": [
                    "./iGame",
                    "./iGame.*",
                    "./src/*.o"
                ]
            },
            "linux": {
                "command": "rm",
                "args": [
                    "./iGame",
                    "./iGame.*",
                    "./src/*.o"
                ]
            }
        }
    ]
}
